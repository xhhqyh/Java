package com.shoe.dao;

import java.util.List;

import javax.annotation.Resource;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.NativeQuery;
import org.hibernate.query.Query;
import org.springframework.stereotype.Repository;

import com.shoe.pojo.Reserve;
/**
 * <p>订单处理
 * @author 李杨
 * @see OrderDao
 */
@Repository 
public class OrderDaoImpl implements OrderDao {
	/**
	 * 从Spring容器注入一个sessionfactory
	 */
	@Resource(name="mySessionFactory")   
    private SessionFactory sessionFactory;
	
	/**
	 * <p>查询全部订单
	 */
	@Override
	public List<Reserve> getOrder(int currentPage, int pageSize) throws Exception {
		Session session = sessionFactory.getCurrentSession();
		String hql ="from Reserve r left join fetch r.user u left join fetch r.recive e";
		Query<Reserve> query = session.createQuery(hql);
		//分页
		query.setFirstResult((currentPage-1)*pageSize);
		query.setMaxResults(pageSize);
		List<Reserve> list = query.getResultList();
		return list;
	}
	/**
	 * <p>查询订单总数
	 */
	@Override
	public long getCount() throws Exception {
		Session session = sessionFactory.getCurrentSession();
		String hql="select count(*) from Reserve";
		Query<Long> query = session.createQuery(hql);
		Long result = query.getSingleResult();
		return result;
	}
	/**
	 * <p>发货或退货处理
	 */
	@Override
	public String updateOrder(Integer[] ids, Integer status) throws Exception{
		Session session = sessionFactory.getCurrentSession();
		//将数组中的所有id全部整合到一条字符串中,并进行修改操作
		String id="";
		for(int i=0;i<ids.length;i++){
			id+=ids[i];
			if(i<ids.length-1){
				id+=",";
			}
		}	
		String sql="update T_RESERVE set RESERVE_STATUS ="+status+"  where RESERVE_ID in("+id+")";
		NativeQuery query = session.createNativeQuery(sql);
		int result = query.executeUpdate();
		
	
		return result>0?"true":"false";
	}
	/**
	 * <p>选择查询部分订单
	 * @return 
	 */
	@Override
	public List<Reserve> getSomeOrder(int status, int currentPage,int pageSize )throws Exception{
		Session session=sessionFactory.getCurrentSession();
		String hql="";
		if(status==5){
			hql="from Reserve r left join fetch r.user u left join fetch r.recive e where r.reserveType=1";
		}else{
			hql="from Reserve r left join fetch r.user u left join fetch r.recive e where r.reserveStatus="+status;
		}
		Query<Reserve> query = session.createQuery(hql);
		query.setFirstResult((currentPage-1)*pageSize);
		query.setMaxResults(pageSize);
		List<Reserve> list = query.getResultList();
		return list;
	}
	/**
	 * <P>查询条件查询的订单总数量
	 * add by liyang 2018年1月15日 上午9:15:24
	 * 
	 * @param status 条件是 订单状态
	 * @return 返回结果值
	 * @throws Exception
	 */
	@Override
	public long getSomeCount(int status)throws Exception{
		Session session=sessionFactory.getCurrentSession();
		String hql="";
			if(status!=5){
				hql="select count(*) from Reserve where reserveStatus="+status;
			}else{
				hql="select count(*) from Reserve where reserveType=1";
			}
		Query<Long> query = session.createQuery(hql);
		Long result = query.getSingleResult();
		return result;
		
	}
	@Override
	public long getSomeCount(String order) throws Exception {
		Session session=sessionFactory.getCurrentSession();
		String hql="select count(*) from Reserve where reserveNo="+order;
		Query<Long> query = session.createQuery(hql);
		Long result = query.getSingleResult();
		return result;
	}
	@Override
	public List<Reserve> getSomeOrder(String order) throws Exception {
		Session session=sessionFactory.getCurrentSession();
		String hql="from Reserve where reserveNo="+order;
		Query<Reserve> query = session.createQuery(hql);
		List<Reserve> list = query.getResultList();
		return list;
	}
}
